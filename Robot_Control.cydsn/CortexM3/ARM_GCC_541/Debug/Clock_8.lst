ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_8.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_8_Start,"ax",%progbits
  20              		.align	2
  21              		.global	Clock_8_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	Clock_8_Start, %function
  25              	Clock_8_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Clock_8.c"
   1:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Clock_8.c **** * File Name: Clock_8.c
   3:Generated_Source\PSoC5/Clock_8.c **** * Version 2.20
   4:Generated_Source\PSoC5/Clock_8.c **** *
   5:Generated_Source\PSoC5/Clock_8.c **** *  Description:
   6:Generated_Source\PSoC5/Clock_8.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/Clock_8.c **** *
   8:Generated_Source\PSoC5/Clock_8.c **** *  Note:
   9:Generated_Source\PSoC5/Clock_8.c **** *
  10:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Clock_8.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Clock_8.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Clock_8.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Clock_8.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Clock_8.c **** 
  17:Generated_Source\PSoC5/Clock_8.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/Clock_8.c **** #include "Clock_8.h"
  19:Generated_Source\PSoC5/Clock_8.c **** 
  20:Generated_Source\PSoC5/Clock_8.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/Clock_8.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/Clock_8.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/Clock_8.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/Clock_8.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/Clock_8.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/Clock_8.c **** 
  27:Generated_Source\PSoC5/Clock_8.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/Clock_8.c **** 
  29:Generated_Source\PSoC5/Clock_8.c **** 
  30:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 2


  31:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_Start
  32:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
  33:Generated_Source\PSoC5/Clock_8.c **** *
  34:Generated_Source\PSoC5/Clock_8.c **** * Summary:
  35:Generated_Source\PSoC5/Clock_8.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/Clock_8.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/Clock_8.c **** *
  38:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
  39:Generated_Source\PSoC5/Clock_8.c **** *  None
  40:Generated_Source\PSoC5/Clock_8.c **** *
  41:Generated_Source\PSoC5/Clock_8.c **** * Returns:
  42:Generated_Source\PSoC5/Clock_8.c **** *  None
  43:Generated_Source\PSoC5/Clock_8.c **** *
  44:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_Start(void) 
  46:Generated_Source\PSoC5/Clock_8.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  47:Generated_Source\PSoC5/Clock_8.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/Clock_8.c ****     Clock_8_CLKEN |= Clock_8_CLKEN_MASK;
  33              		.loc 1 48 0
  34 0000 054A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/Clock_8.c **** 	Clock_8_CLKSTBY |= Clock_8_CLKSTBY_MASK;
  38              		.loc 1 49 0
  39 000a 1032     		adds	r2, r2, #16
  40 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 000e 43F08003 		orr	r3, r3, #128
  42 0012 1370     		strb	r3, [r2]
  43 0014 7047     		bx	lr
  44              	.L3:
  45 0016 00BF     		.align	2
  46              	.L2:
  47 0018 A2430040 		.word	1073759138
  48              		.cfi_endproc
  49              	.LFE0:
  50              		.size	Clock_8_Start, .-Clock_8_Start
  51              		.section	.text.Clock_8_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	Clock_8_Stop
  54              		.thumb
  55              		.thumb_func
  56              		.type	Clock_8_Stop, %function
  57              	Clock_8_Stop:
  58              	.LFB1:
  50:Generated_Source\PSoC5/Clock_8.c **** }
  51:Generated_Source\PSoC5/Clock_8.c **** 
  52:Generated_Source\PSoC5/Clock_8.c **** 
  53:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_Stop
  55:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
  56:Generated_Source\PSoC5/Clock_8.c **** *
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 3


  57:Generated_Source\PSoC5/Clock_8.c **** * Summary:
  58:Generated_Source\PSoC5/Clock_8.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/Clock_8.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/Clock_8.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/Clock_8.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/Clock_8.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/Clock_8.c **** *
  64:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
  65:Generated_Source\PSoC5/Clock_8.c **** *  None
  66:Generated_Source\PSoC5/Clock_8.c **** *
  67:Generated_Source\PSoC5/Clock_8.c **** * Returns:
  68:Generated_Source\PSoC5/Clock_8.c **** *  None
  69:Generated_Source\PSoC5/Clock_8.c **** *
  70:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_Stop(void) 
  72:Generated_Source\PSoC5/Clock_8.c **** {
  59              		.loc 1 72 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  73:Generated_Source\PSoC5/Clock_8.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/Clock_8.c ****     Clock_8_CLKEN &= (uint8)(~Clock_8_CLKEN_MASK);
  64              		.loc 1 74 0
  65 0000 054A     		ldr	r2, .L5
  66 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0004 03F07F03 		and	r3, r3, #127
  68 0008 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/Clock_8.c **** 	Clock_8_CLKSTBY &= (uint8)(~Clock_8_CLKSTBY_MASK);
  69              		.loc 1 75 0
  70 000a 1032     		adds	r2, r2, #16
  71 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  72 000e 03F07F03 		and	r3, r3, #127
  73 0012 1370     		strb	r3, [r2]
  74 0014 7047     		bx	lr
  75              	.L6:
  76 0016 00BF     		.align	2
  77              	.L5:
  78 0018 A2430040 		.word	1073759138
  79              		.cfi_endproc
  80              	.LFE1:
  81              		.size	Clock_8_Stop, .-Clock_8_Stop
  82              		.section	.text.Clock_8_StopBlock,"ax",%progbits
  83              		.align	2
  84              		.global	Clock_8_StopBlock
  85              		.thumb
  86              		.thumb_func
  87              		.type	Clock_8_StopBlock, %function
  88              	Clock_8_StopBlock:
  89              	.LFB2:
  76:Generated_Source\PSoC5/Clock_8.c **** }
  77:Generated_Source\PSoC5/Clock_8.c **** 
  78:Generated_Source\PSoC5/Clock_8.c **** 
  79:Generated_Source\PSoC5/Clock_8.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/Clock_8.c **** 
  81:Generated_Source\PSoC5/Clock_8.c **** 
  82:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 4


  83:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_StopBlock
  84:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
  85:Generated_Source\PSoC5/Clock_8.c **** *
  86:Generated_Source\PSoC5/Clock_8.c **** * Summary:
  87:Generated_Source\PSoC5/Clock_8.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/Clock_8.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/Clock_8.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/Clock_8.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/Clock_8.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/Clock_8.c **** *
  93:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
  94:Generated_Source\PSoC5/Clock_8.c **** *  None
  95:Generated_Source\PSoC5/Clock_8.c **** *
  96:Generated_Source\PSoC5/Clock_8.c **** * Returns:
  97:Generated_Source\PSoC5/Clock_8.c **** *  None
  98:Generated_Source\PSoC5/Clock_8.c **** *
  99:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 100:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_StopBlock(void) 
 101:Generated_Source\PSoC5/Clock_8.c **** {
  90              		.loc 1 101 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 102:Generated_Source\PSoC5/Clock_8.c ****     if ((Clock_8_CLKEN & Clock_8_CLKEN_MASK) != 0u)
  95              		.loc 1 102 0
  96 0000 164B     		ldr	r3, .L10
  97 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98 0004 13F0800F 		tst	r3, #128
  99 0008 27D0     		beq	.L7
 100              	.LBB2:
 103:Generated_Source\PSoC5/Clock_8.c ****     {
 104:Generated_Source\PSoC5/Clock_8.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/Clock_8.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/Clock_8.c **** 
 107:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_LD = 0u;
 101              		.loc 1 107 0
 102 000a 1549     		ldr	r1, .L10+4
 103 000c 0023     		movs	r3, #0
 104 000e 0B70     		strb	r3, [r1]
 108:Generated_Source\PSoC5/Clock_8.c **** 
 109:Generated_Source\PSoC5/Clock_8.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/Clock_8.c **** #if defined(Clock_8__CFG3)
 111:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_AMASK = Clock_8_CLKEN_MASK;
 112:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_DMASK = 0x00u;
 113:Generated_Source\PSoC5/Clock_8.c **** #else
 114:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_DMASK = Clock_8_CLKEN_MASK;
 105              		.loc 1 114 0
 106 0010 8020     		movs	r0, #128
 107 0012 144A     		ldr	r2, .L10+8
 108 0014 1070     		strb	r0, [r2]
 115:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_AMASK = 0x00u;
 109              		.loc 1 115 0
 110 0016 0432     		adds	r2, r2, #4
 111 0018 1370     		strb	r3, [r2]
 116:Generated_Source\PSoC5/Clock_8.c **** #endif /* Clock_8__CFG3 */
 117:Generated_Source\PSoC5/Clock_8.c **** 
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 5


 118:Generated_Source\PSoC5/Clock_8.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 112              		.loc 1 119 0
 113 001a 0C3A     		subs	r2, r2, #12
 114 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 115 001e 03F07F03 		and	r3, r3, #127
 116 0022 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/Clock_8.c **** 
 121:Generated_Source\PSoC5/Clock_8.c ****         oldDivider = CY_GET_REG16(Clock_8_DIV_PTR);
 117              		.loc 1 121 0
 118 0024 104B     		ldr	r3, .L10+12
 119 0026 1A88     		ldrh	r2, [r3]
 120 0028 92B2     		uxth	r2, r2
 121              	.LVL0:
 122:Generated_Source\PSoC5/Clock_8.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 122              		.loc 1 122 0
 123 002a 9A3B     		subs	r3, r3, #154
 124 002c 1A80     		strh	r2, [r3]	@ movhi
 123:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 125              		.loc 1 123 0
 126 002e 0723     		movs	r3, #7
 127 0030 0B70     		strb	r3, [r1]
 128              	.L9:
 124:Generated_Source\PSoC5/Clock_8.c **** 
 125:Generated_Source\PSoC5/Clock_8.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/Clock_8.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 129              		.loc 1 126 0 discriminator 1
 130 0032 0B4B     		ldr	r3, .L10+4
 131 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 0036 13F0010F 		tst	r3, #1
 133 003a FAD1     		bne	.L9
 127:Generated_Source\PSoC5/Clock_8.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/Clock_8.c **** 
 129:Generated_Source\PSoC5/Clock_8.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_CLKEN &= (uint8)(~Clock_8_CLKEN_MASK);
 134              		.loc 1 130 0
 135 003c 0749     		ldr	r1, .L10
 136 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 137 0040 03F07F03 		and	r3, r3, #127
 138 0044 0B70     		strb	r3, [r1]
 131:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_CLKSTBY &= (uint8)(~Clock_8_CLKSTBY_MASK);
 139              		.loc 1 131 0
 140 0046 1031     		adds	r1, r1, #16
 141 0048 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 142 004a 03F07F03 		and	r3, r3, #127
 143 004e 0B70     		strb	r3, [r1]
 132:Generated_Source\PSoC5/Clock_8.c **** 
 133:Generated_Source\PSoC5/Clock_8.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/Clock_8.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/Clock_8.c ****         CLK_DIST_LD = 0x00u;
 144              		.loc 1 135 0
 145 0050 0021     		movs	r1, #0
 146 0052 034B     		ldr	r3, .L10+4
 147 0054 1970     		strb	r1, [r3]
 136:Generated_Source\PSoC5/Clock_8.c ****         CY_SET_REG16(Clock_8_DIV_PTR, oldDivider);
 148              		.loc 1 136 0
 149 0056 9B33     		adds	r3, r3, #155
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 6


 150 0058 1A80     		strh	r2, [r3]	@ movhi
 151              	.LVL1:
 152              	.L7:
 153 005a 7047     		bx	lr
 154              	.L11:
 155              		.align	2
 156              	.L10:
 157 005c A2430040 		.word	1073759138
 158 0060 01400040 		.word	1073758209
 159 0064 10400040 		.word	1073758224
 160 0068 9C400040 		.word	1073758364
 161              	.LBE2:
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	Clock_8_StopBlock, .-Clock_8_StopBlock
 165              		.section	.text.Clock_8_StandbyPower,"ax",%progbits
 166              		.align	2
 167              		.global	Clock_8_StandbyPower
 168              		.thumb
 169              		.thumb_func
 170              		.type	Clock_8_StandbyPower, %function
 171              	Clock_8_StandbyPower:
 172              	.LFB3:
 137:Generated_Source\PSoC5/Clock_8.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/Clock_8.c ****     }
 139:Generated_Source\PSoC5/Clock_8.c **** }
 140:Generated_Source\PSoC5/Clock_8.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/Clock_8.c **** 
 142:Generated_Source\PSoC5/Clock_8.c **** 
 143:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_StandbyPower
 145:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 146:Generated_Source\PSoC5/Clock_8.c **** *
 147:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 148:Generated_Source\PSoC5/Clock_8.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/Clock_8.c **** *
 150:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 151:Generated_Source\PSoC5/Clock_8.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/Clock_8.c **** *
 153:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 154:Generated_Source\PSoC5/Clock_8.c **** *  None
 155:Generated_Source\PSoC5/Clock_8.c **** *
 156:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/Clock_8.c **** {
 173              		.loc 1 158 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 159:Generated_Source\PSoC5/Clock_8.c ****     if(state == 0u)
 179              		.loc 1 159 0
 180 0000 28B9     		cbnz	r0, .L13
 160:Generated_Source\PSoC5/Clock_8.c ****     {
 161:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_CLKSTBY &= (uint8)(~Clock_8_CLKSTBY_MASK);
 181              		.loc 1 161 0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 7


 182 0002 064A     		ldr	r2, .L15
 183 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 184 0006 03F07F03 		and	r3, r3, #127
 185 000a 1370     		strb	r3, [r2]
 186 000c 7047     		bx	lr
 187              	.L13:
 162:Generated_Source\PSoC5/Clock_8.c ****     }
 163:Generated_Source\PSoC5/Clock_8.c ****     else
 164:Generated_Source\PSoC5/Clock_8.c ****     {
 165:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_CLKSTBY |= Clock_8_CLKSTBY_MASK;
 188              		.loc 1 165 0
 189 000e 034A     		ldr	r2, .L15
 190 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191 0012 43F08003 		orr	r3, r3, #128
 192 0016 1370     		strb	r3, [r2]
 193 0018 7047     		bx	lr
 194              	.L16:
 195 001a 00BF     		.align	2
 196              	.L15:
 197 001c B2430040 		.word	1073759154
 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	Clock_8_StandbyPower, .-Clock_8_StandbyPower
 201              		.section	.text.Clock_8_GetDividerRegister,"ax",%progbits
 202              		.align	2
 203              		.global	Clock_8_GetDividerRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	Clock_8_GetDividerRegister, %function
 207              	Clock_8_GetDividerRegister:
 208              	.LFB5:
 166:Generated_Source\PSoC5/Clock_8.c ****     }
 167:Generated_Source\PSoC5/Clock_8.c **** }
 168:Generated_Source\PSoC5/Clock_8.c **** 
 169:Generated_Source\PSoC5/Clock_8.c **** 
 170:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_SetDividerRegister
 172:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 173:Generated_Source\PSoC5/Clock_8.c **** *
 174:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 175:Generated_Source\PSoC5/Clock_8.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/Clock_8.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/Clock_8.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/Clock_8.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/Clock_8.c **** *
 180:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 181:Generated_Source\PSoC5/Clock_8.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/Clock_8.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/Clock_8.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/Clock_8.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/Clock_8.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/Clock_8.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:Generated_Source\PSoC5/Clock_8.c **** *   cycle.
 188:Generated_Source\PSoC5/Clock_8.c **** *
 189:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 190:Generated_Source\PSoC5/Clock_8.c **** *  None
 191:Generated_Source\PSoC5/Clock_8.c **** *
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 8


 192:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 193:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/Clock_8.c ****                                 
 195:Generated_Source\PSoC5/Clock_8.c **** {
 196:Generated_Source\PSoC5/Clock_8.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/Clock_8.c **** 
 198:Generated_Source\PSoC5/Clock_8.c ****     uint8 currSrc = Clock_8_GetSourceRegister();
 199:Generated_Source\PSoC5/Clock_8.c ****     uint16 oldDivider = Clock_8_GetDividerRegister();
 200:Generated_Source\PSoC5/Clock_8.c **** 
 201:Generated_Source\PSoC5/Clock_8.c ****     if (clkDivider != oldDivider)
 202:Generated_Source\PSoC5/Clock_8.c ****     {
 203:Generated_Source\PSoC5/Clock_8.c ****         enabled = Clock_8_CLKEN & Clock_8_CLKEN_MASK;
 204:Generated_Source\PSoC5/Clock_8.c **** 
 205:Generated_Source\PSoC5/Clock_8.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:Generated_Source\PSoC5/Clock_8.c ****         {
 207:Generated_Source\PSoC5/Clock_8.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/Clock_8.c ****             if (oldDivider == 0u)
 209:Generated_Source\PSoC5/Clock_8.c ****             {
 210:Generated_Source\PSoC5/Clock_8.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/Clock_8.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/Clock_8.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/Clock_8.c ****                 CY_SET_REG16(Clock_8_DIV_PTR, clkDivider);
 214:Generated_Source\PSoC5/Clock_8.c ****                 Clock_8_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:Generated_Source\PSoC5/Clock_8.c ****             }
 216:Generated_Source\PSoC5/Clock_8.c ****             else
 217:Generated_Source\PSoC5/Clock_8.c ****             {
 218:Generated_Source\PSoC5/Clock_8.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/Clock_8.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/Clock_8.c ****                 Clock_8_MOD_SRC |= CYCLK_SSS;
 221:Generated_Source\PSoC5/Clock_8.c ****                 CY_SET_REG16(Clock_8_DIV_PTR, clkDivider);
 222:Generated_Source\PSoC5/Clock_8.c ****             }
 223:Generated_Source\PSoC5/Clock_8.c ****         }
 224:Generated_Source\PSoC5/Clock_8.c ****         else
 225:Generated_Source\PSoC5/Clock_8.c ****         {
 226:Generated_Source\PSoC5/Clock_8.c **** 			
 227:Generated_Source\PSoC5/Clock_8.c ****             if (enabled != 0u)
 228:Generated_Source\PSoC5/Clock_8.c ****             {
 229:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_LD = 0x00u;
 230:Generated_Source\PSoC5/Clock_8.c **** 
 231:Generated_Source\PSoC5/Clock_8.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/Clock_8.c **** #if defined(Clock_8__CFG3)
 233:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_AMASK = Clock_8_CLKEN_MASK;
 234:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_DMASK = 0x00u;
 235:Generated_Source\PSoC5/Clock_8.c **** #else
 236:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_DMASK = Clock_8_CLKEN_MASK;
 237:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_AMASK = 0x00u;
 238:Generated_Source\PSoC5/Clock_8.c **** #endif /* Clock_8__CFG3 */
 239:Generated_Source\PSoC5/Clock_8.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:Generated_Source\PSoC5/Clock_8.c **** 
 242:Generated_Source\PSoC5/Clock_8.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/Clock_8.c ****                 if (((Clock_8_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:Generated_Source\PSoC5/Clock_8.c ****                 {
 245:Generated_Source\PSoC5/Clock_8.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/Clock_8.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:Generated_Source\PSoC5/Clock_8.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:Generated_Source\PSoC5/Clock_8.c **** 
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 9


 249:Generated_Source\PSoC5/Clock_8.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/Clock_8.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:Generated_Source\PSoC5/Clock_8.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/Clock_8.c **** 
 253:Generated_Source\PSoC5/Clock_8.c ****                     Clock_8_CLKEN &= (uint8)(~Clock_8_CLKEN_MASK);
 254:Generated_Source\PSoC5/Clock_8.c **** 
 255:Generated_Source\PSoC5/Clock_8.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/Clock_8.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/Clock_8.c ****                     CLK_DIST_LD = 0x00u;
 258:Generated_Source\PSoC5/Clock_8.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/Clock_8.c ****                 }
 260:Generated_Source\PSoC5/Clock_8.c ****             }
 261:Generated_Source\PSoC5/Clock_8.c **** 
 262:Generated_Source\PSoC5/Clock_8.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/Clock_8.c ****             if ((Clock_8_CLKEN & Clock_8_CLKEN_MASK) != 0u)
 264:Generated_Source\PSoC5/Clock_8.c ****             {
 265:Generated_Source\PSoC5/Clock_8.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/Clock_8.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:Generated_Source\PSoC5/Clock_8.c **** 
 268:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:Generated_Source\PSoC5/Clock_8.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:Generated_Source\PSoC5/Clock_8.c ****             }
 271:Generated_Source\PSoC5/Clock_8.c ****             else
 272:Generated_Source\PSoC5/Clock_8.c ****             {
 273:Generated_Source\PSoC5/Clock_8.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/Clock_8.c ****                 CY_SET_REG16(Clock_8_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/Clock_8.c **** 				Clock_8_CLKEN |= enabled;
 276:Generated_Source\PSoC5/Clock_8.c ****             }
 277:Generated_Source\PSoC5/Clock_8.c ****         }
 278:Generated_Source\PSoC5/Clock_8.c ****     }
 279:Generated_Source\PSoC5/Clock_8.c **** }
 280:Generated_Source\PSoC5/Clock_8.c **** 
 281:Generated_Source\PSoC5/Clock_8.c **** 
 282:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_GetDividerRegister
 284:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 285:Generated_Source\PSoC5/Clock_8.c **** *
 286:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 287:Generated_Source\PSoC5/Clock_8.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/Clock_8.c **** *
 289:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 290:Generated_Source\PSoC5/Clock_8.c **** *  None
 291:Generated_Source\PSoC5/Clock_8.c **** *
 292:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 293:Generated_Source\PSoC5/Clock_8.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:Generated_Source\PSoC5/Clock_8.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/Clock_8.c **** *
 296:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/Clock_8.c **** uint16 Clock_8_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/Clock_8.c **** {
 209              		.loc 1 298 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 299:Generated_Source\PSoC5/Clock_8.c ****     return CY_GET_REG16(Clock_8_DIV_PTR);
 214              		.loc 1 299 0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 10


 215 0000 014B     		ldr	r3, .L18
 216 0002 1888     		ldrh	r0, [r3]
 300:Generated_Source\PSoC5/Clock_8.c **** }
 217              		.loc 1 300 0
 218 0004 80B2     		uxth	r0, r0
 219 0006 7047     		bx	lr
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0008 9C400040 		.word	1073758364
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	Clock_8_GetDividerRegister, .-Clock_8_GetDividerRegister
 227              		.section	.text.Clock_8_SetModeRegister,"ax",%progbits
 228              		.align	2
 229              		.global	Clock_8_SetModeRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	Clock_8_SetModeRegister, %function
 233              	Clock_8_SetModeRegister:
 234              	.LFB6:
 301:Generated_Source\PSoC5/Clock_8.c **** 
 302:Generated_Source\PSoC5/Clock_8.c **** 
 303:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_SetModeRegister
 305:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 306:Generated_Source\PSoC5/Clock_8.c **** *
 307:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 308:Generated_Source\PSoC5/Clock_8.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/Clock_8.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/Clock_8.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/Clock_8.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/Clock_8.c **** *
 313:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 314:Generated_Source\PSoC5/Clock_8.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/Clock_8.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/Clock_8.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/Clock_8.c **** *                 value.
 319:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/Clock_8.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/Clock_8.c **** *                 disabled, the output clock is asserted for one period of the
 322:Generated_Source\PSoC5/Clock_8.c **** *                 source clock.
 323:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/Clock_8.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/Clock_8.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/Clock_8.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/Clock_8.c **** *
 328:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 329:Generated_Source\PSoC5/Clock_8.c **** *  None
 330:Generated_Source\PSoC5/Clock_8.c **** *
 331:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/Clock_8.c **** {
 235              		.loc 1 333 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 11


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL3:
 334:Generated_Source\PSoC5/Clock_8.c ****     Clock_8_MOD_SRC |= modeBitMask & (uint8)Clock_8_MODE_MASK;
 241              		.loc 1 334 0
 242 0000 034B     		ldr	r3, .L21
 243 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 244 0004 00F0F800 		and	r0, r0, #248
 245              	.LVL4:
 246 0008 1043     		orrs	r0, r0, r2
 247 000a 1870     		strb	r0, [r3]
 248 000c 7047     		bx	lr
 249              	.L22:
 250 000e 00BF     		.align	2
 251              	.L21:
 252 0010 9E400040 		.word	1073758366
 253              		.cfi_endproc
 254              	.LFE6:
 255              		.size	Clock_8_SetModeRegister, .-Clock_8_SetModeRegister
 256              		.section	.text.Clock_8_ClearModeRegister,"ax",%progbits
 257              		.align	2
 258              		.global	Clock_8_ClearModeRegister
 259              		.thumb
 260              		.thumb_func
 261              		.type	Clock_8_ClearModeRegister, %function
 262              	Clock_8_ClearModeRegister:
 263              	.LFB7:
 335:Generated_Source\PSoC5/Clock_8.c **** }
 336:Generated_Source\PSoC5/Clock_8.c **** 
 337:Generated_Source\PSoC5/Clock_8.c **** 
 338:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_ClearModeRegister
 340:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 341:Generated_Source\PSoC5/Clock_8.c **** *
 342:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 343:Generated_Source\PSoC5/Clock_8.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/Clock_8.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/Clock_8.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/Clock_8.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/Clock_8.c **** *
 348:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 349:Generated_Source\PSoC5/Clock_8.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/Clock_8.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/Clock_8.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/Clock_8.c **** *                 value.
 354:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/Clock_8.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/Clock_8.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/Clock_8.c **** *                 source clock.
 358:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/Clock_8.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/Clock_8.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/Clock_8.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/Clock_8.c **** *
 363:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 364:Generated_Source\PSoC5/Clock_8.c **** *  None
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 12


 365:Generated_Source\PSoC5/Clock_8.c **** *
 366:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/Clock_8.c **** {
 264              		.loc 1 368 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL5:
 369:Generated_Source\PSoC5/Clock_8.c ****     Clock_8_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_8_MODE_MASK));
 270              		.loc 1 369 0
 271 0000 044B     		ldr	r3, .L24
 272 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 273 0004 C043     		mvns	r0, r0
 274              	.LVL6:
 275 0006 C0B2     		uxtb	r0, r0
 276 0008 40F00700 		orr	r0, r0, #7
 277 000c 1040     		ands	r0, r0, r2
 278 000e 1870     		strb	r0, [r3]
 279 0010 7047     		bx	lr
 280              	.L25:
 281 0012 00BF     		.align	2
 282              	.L24:
 283 0014 9E400040 		.word	1073758366
 284              		.cfi_endproc
 285              	.LFE7:
 286              		.size	Clock_8_ClearModeRegister, .-Clock_8_ClearModeRegister
 287              		.section	.text.Clock_8_GetModeRegister,"ax",%progbits
 288              		.align	2
 289              		.global	Clock_8_GetModeRegister
 290              		.thumb
 291              		.thumb_func
 292              		.type	Clock_8_GetModeRegister, %function
 293              	Clock_8_GetModeRegister:
 294              	.LFB8:
 370:Generated_Source\PSoC5/Clock_8.c **** }
 371:Generated_Source\PSoC5/Clock_8.c **** 
 372:Generated_Source\PSoC5/Clock_8.c **** 
 373:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_GetModeRegister
 375:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 376:Generated_Source\PSoC5/Clock_8.c **** *
 377:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 378:Generated_Source\PSoC5/Clock_8.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/Clock_8.c **** *
 380:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 381:Generated_Source\PSoC5/Clock_8.c **** *  None
 382:Generated_Source\PSoC5/Clock_8.c **** *
 383:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 384:Generated_Source\PSoC5/Clock_8.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/Clock_8.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/Clock_8.c **** *
 387:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/Clock_8.c **** uint8 Clock_8_GetModeRegister(void) 
 389:Generated_Source\PSoC5/Clock_8.c **** {
 295              		.loc 1 389 0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 13


 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 390:Generated_Source\PSoC5/Clock_8.c ****     return Clock_8_MOD_SRC & (uint8)(Clock_8_MODE_MASK);
 300              		.loc 1 390 0
 301 0000 024B     		ldr	r3, .L27
 302 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:Generated_Source\PSoC5/Clock_8.c **** }
 303              		.loc 1 391 0
 304 0004 00F0F800 		and	r0, r0, #248
 305 0008 7047     		bx	lr
 306              	.L28:
 307 000a 00BF     		.align	2
 308              	.L27:
 309 000c 9E400040 		.word	1073758366
 310              		.cfi_endproc
 311              	.LFE8:
 312              		.size	Clock_8_GetModeRegister, .-Clock_8_GetModeRegister
 313              		.section	.text.Clock_8_GetSourceRegister,"ax",%progbits
 314              		.align	2
 315              		.global	Clock_8_GetSourceRegister
 316              		.thumb
 317              		.thumb_func
 318              		.type	Clock_8_GetSourceRegister, %function
 319              	Clock_8_GetSourceRegister:
 320              	.LFB10:
 392:Generated_Source\PSoC5/Clock_8.c **** 
 393:Generated_Source\PSoC5/Clock_8.c **** 
 394:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_SetSourceRegister
 396:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 397:Generated_Source\PSoC5/Clock_8.c **** *
 398:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 399:Generated_Source\PSoC5/Clock_8.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:Generated_Source\PSoC5/Clock_8.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/Clock_8.c **** *
 402:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 403:Generated_Source\PSoC5/Clock_8.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:Generated_Source\PSoC5/Clock_8.c **** *   following input sources:
 405:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_XTALM
 408:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/Clock_8.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/Clock_8.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/Clock_8.c **** *
 415:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 416:Generated_Source\PSoC5/Clock_8.c **** *  None
 417:Generated_Source\PSoC5/Clock_8.c **** *
 418:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/Clock_8.c **** void Clock_8_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/Clock_8.c **** {
 421:Generated_Source\PSoC5/Clock_8.c ****     uint16 currDiv = Clock_8_GetDividerRegister();
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 14


 422:Generated_Source\PSoC5/Clock_8.c ****     uint8 oldSrc = Clock_8_GetSourceRegister();
 423:Generated_Source\PSoC5/Clock_8.c **** 
 424:Generated_Source\PSoC5/Clock_8.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:Generated_Source\PSoC5/Clock_8.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:Generated_Source\PSoC5/Clock_8.c ****     {
 427:Generated_Source\PSoC5/Clock_8.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/Clock_8.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC |= CYCLK_SSS;
 430:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC =
 431:Generated_Source\PSoC5/Clock_8.c ****             (Clock_8_MOD_SRC & (uint8)(~Clock_8_SRC_SEL_MSK)) | clkSource;
 432:Generated_Source\PSoC5/Clock_8.c ****     }
 433:Generated_Source\PSoC5/Clock_8.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:Generated_Source\PSoC5/Clock_8.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:Generated_Source\PSoC5/Clock_8.c ****     {
 436:Generated_Source\PSoC5/Clock_8.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/Clock_8.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC =
 439:Generated_Source\PSoC5/Clock_8.c ****             (Clock_8_MOD_SRC & (uint8)(~Clock_8_SRC_SEL_MSK)) | clkSource;
 440:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:Generated_Source\PSoC5/Clock_8.c ****     }
 442:Generated_Source\PSoC5/Clock_8.c ****     else
 443:Generated_Source\PSoC5/Clock_8.c ****     {
 444:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC =
 445:Generated_Source\PSoC5/Clock_8.c ****             (Clock_8_MOD_SRC & (uint8)(~Clock_8_SRC_SEL_MSK)) | clkSource;
 446:Generated_Source\PSoC5/Clock_8.c ****     }
 447:Generated_Source\PSoC5/Clock_8.c **** }
 448:Generated_Source\PSoC5/Clock_8.c **** 
 449:Generated_Source\PSoC5/Clock_8.c **** 
 450:Generated_Source\PSoC5/Clock_8.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/Clock_8.c **** * Function Name: Clock_8_GetSourceRegister
 452:Generated_Source\PSoC5/Clock_8.c **** ********************************************************************************
 453:Generated_Source\PSoC5/Clock_8.c **** *
 454:Generated_Source\PSoC5/Clock_8.c **** * Summary:
 455:Generated_Source\PSoC5/Clock_8.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/Clock_8.c **** *
 457:Generated_Source\PSoC5/Clock_8.c **** * Parameters:
 458:Generated_Source\PSoC5/Clock_8.c **** *  None
 459:Generated_Source\PSoC5/Clock_8.c **** *
 460:Generated_Source\PSoC5/Clock_8.c **** * Returns:
 461:Generated_Source\PSoC5/Clock_8.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/Clock_8.c **** *
 463:Generated_Source\PSoC5/Clock_8.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/Clock_8.c **** uint8 Clock_8_GetSourceRegister(void) 
 465:Generated_Source\PSoC5/Clock_8.c **** {
 321              		.loc 1 465 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 466:Generated_Source\PSoC5/Clock_8.c ****     return Clock_8_MOD_SRC & Clock_8_SRC_SEL_MSK;
 326              		.loc 1 466 0
 327 0000 024B     		ldr	r3, .L30
 328 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:Generated_Source\PSoC5/Clock_8.c **** }
 329              		.loc 1 467 0
 330 0004 00F00700 		and	r0, r0, #7
 331 0008 7047     		bx	lr
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 15


 332              	.L31:
 333 000a 00BF     		.align	2
 334              	.L30:
 335 000c 9E400040 		.word	1073758366
 336              		.cfi_endproc
 337              	.LFE10:
 338              		.size	Clock_8_GetSourceRegister, .-Clock_8_GetSourceRegister
 339              		.section	.text.Clock_8_SetDividerRegister,"ax",%progbits
 340              		.align	2
 341              		.global	Clock_8_SetDividerRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	Clock_8_SetDividerRegister, %function
 345              	Clock_8_SetDividerRegister:
 346              	.LFB4:
 195:Generated_Source\PSoC5/Clock_8.c ****     uint8 enabled;
 347              		.loc 1 195 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL7:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 0446     		mov	r4, r0
 359 0004 0D46     		mov	r5, r1
 198:Generated_Source\PSoC5/Clock_8.c ****     uint16 oldDivider = Clock_8_GetDividerRegister();
 360              		.loc 1 198 0
 361 0006 FFF7FEFF 		bl	Clock_8_GetSourceRegister
 362              	.LVL8:
 363 000a 0646     		mov	r6, r0
 364              	.LVL9:
 199:Generated_Source\PSoC5/Clock_8.c **** 
 365              		.loc 1 199 0
 366 000c FFF7FEFF 		bl	Clock_8_GetDividerRegister
 367              	.LVL10:
 201:Generated_Source\PSoC5/Clock_8.c ****     {
 368              		.loc 1 201 0
 369 0010 A042     		cmp	r0, r4
 370 0012 58D0     		beq	.L32
 203:Generated_Source\PSoC5/Clock_8.c **** 
 371              		.loc 1 203 0
 372 0014 2C4B     		ldr	r3, .L45
 373 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 0018 03F08003 		and	r3, r3, #128
 375 001c DBB2     		uxtb	r3, r3
 376              	.LVL11:
 205:Generated_Source\PSoC5/Clock_8.c ****         {
 377              		.loc 1 205 0
 378 001e 96B9     		cbnz	r6, .L34
 205:Generated_Source\PSoC5/Clock_8.c ****         {
 379              		.loc 1 205 0 is_stmt 0 discriminator 1
 380 0020 00B1     		cbz	r0, .L35
 205:Generated_Source\PSoC5/Clock_8.c ****         {
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 16


 381              		.loc 1 205 0 discriminator 2
 382 0022 84B9     		cbnz	r4, .L34
 383              	.L35:
 208:Generated_Source\PSoC5/Clock_8.c ****             {
 384              		.loc 1 208 0 is_stmt 1
 385 0024 38B9     		cbnz	r0, .L36
 213:Generated_Source\PSoC5/Clock_8.c ****                 Clock_8_MOD_SRC &= (uint8)(~CYCLK_SSS);
 386              		.loc 1 213 0
 387 0026 294B     		ldr	r3, .L45+4
 388              	.LVL12:
 389 0028 1C80     		strh	r4, [r3]	@ movhi
 214:Generated_Source\PSoC5/Clock_8.c ****             }
 390              		.loc 1 214 0
 391 002a 294A     		ldr	r2, .L45+8
 392 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 393 002e 03F0BF03 		and	r3, r3, #191
 394 0032 1370     		strb	r3, [r2]
 395 0034 70BD     		pop	{r4, r5, r6, pc}
 396              	.LVL13:
 397              	.L36:
 220:Generated_Source\PSoC5/Clock_8.c ****                 CY_SET_REG16(Clock_8_DIV_PTR, clkDivider);
 398              		.loc 1 220 0
 399 0036 264A     		ldr	r2, .L45+8
 400 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401              	.LVL14:
 402 003a 43F04003 		orr	r3, r3, #64
 403 003e 1370     		strb	r3, [r2]
 221:Generated_Source\PSoC5/Clock_8.c ****             }
 404              		.loc 1 221 0
 405 0040 224B     		ldr	r3, .L45+4
 406 0042 1C80     		strh	r4, [r3]	@ movhi
 407 0044 70BD     		pop	{r4, r5, r6, pc}
 408              	.LVL15:
 409              	.L34:
 227:Generated_Source\PSoC5/Clock_8.c ****             {
 410              		.loc 1 227 0
 411 0046 23B3     		cbz	r3, .L37
 229:Generated_Source\PSoC5/Clock_8.c **** 
 412              		.loc 1 229 0
 413 0048 0022     		movs	r2, #0
 414 004a 2249     		ldr	r1, .L45+12
 415 004c 0A70     		strb	r2, [r1]
 236:Generated_Source\PSoC5/Clock_8.c ****                 CLK_DIST_AMASK = 0x00u;
 416              		.loc 1 236 0
 417 004e 8026     		movs	r6, #128
 418              	.LVL16:
 419 0050 0F31     		adds	r1, r1, #15
 420 0052 0E70     		strb	r6, [r1]
 237:Generated_Source\PSoC5/Clock_8.c **** #endif /* Clock_8__CFG3 */
 421              		.loc 1 237 0
 422 0054 0431     		adds	r1, r1, #4
 423 0056 0A70     		strb	r2, [r1]
 240:Generated_Source\PSoC5/Clock_8.c **** 
 424              		.loc 1 240 0
 425 0058 0C39     		subs	r1, r1, #12
 426 005a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 427 005c 02F07F02 		and	r2, r2, #127
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 17


 428 0060 0A70     		strb	r2, [r1]
 243:Generated_Source\PSoC5/Clock_8.c ****                 {
 429              		.loc 1 243 0
 430 0062 1B4A     		ldr	r2, .L45+8
 431 0064 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 432 0066 12F0080F 		tst	r2, #8
 433 006a 00D0     		beq	.L38
 243:Generated_Source\PSoC5/Clock_8.c ****                 {
 434              		.loc 1 243 0 is_stmt 0 discriminator 1
 435 006c 8CB9     		cbnz	r4, .L37
 436              	.L38:
 246:Generated_Source\PSoC5/Clock_8.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 437              		.loc 1 246 0 is_stmt 1
 438 006e 1A4A     		ldr	r2, .L45+16
 439 0070 1080     		strh	r0, [r2]	@ movhi
 247:Generated_Source\PSoC5/Clock_8.c **** 
 440              		.loc 1 247 0
 441 0072 0721     		movs	r1, #7
 442 0074 013A     		subs	r2, r2, #1
 443 0076 1170     		strb	r1, [r2]
 444              	.L39:
 250:Generated_Source\PSoC5/Clock_8.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 445              		.loc 1 250 0 discriminator 1
 446 0078 164A     		ldr	r2, .L45+12
 447 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 448 007c 12F0010F 		tst	r2, #1
 449 0080 FAD1     		bne	.L39
 253:Generated_Source\PSoC5/Clock_8.c **** 
 450              		.loc 1 253 0
 451 0082 1149     		ldr	r1, .L45
 452 0084 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 453 0086 02F07F02 		and	r2, r2, #127
 454 008a 0A70     		strb	r2, [r1]
 257:Generated_Source\PSoC5/Clock_8.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 455              		.loc 1 257 0
 456 008c 0021     		movs	r1, #0
 457 008e 114A     		ldr	r2, .L45+12
 458 0090 1170     		strb	r1, [r2]
 459              	.L37:
 263:Generated_Source\PSoC5/Clock_8.c ****             {
 460              		.loc 1 263 0
 461 0092 0D4A     		ldr	r2, .L45
 462 0094 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 463 0096 12F0800F 		tst	r2, #128
 464 009a 0DD0     		beq	.L40
 266:Generated_Source\PSoC5/Clock_8.c **** 
 465              		.loc 1 266 0
 466 009c 0E4B     		ldr	r3, .L45+16
 467              	.LVL17:
 468 009e 1C80     		strh	r4, [r3]	@ movhi
 268:Generated_Source\PSoC5/Clock_8.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 469              		.loc 1 268 0
 470 00a0 0DB1     		cbz	r5, .L43
 471 00a2 0322     		movs	r2, #3
 472 00a4 00E0     		b	.L41
 473              	.L43:
 474 00a6 0122     		movs	r2, #1
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 18


 475              	.L41:
 268:Generated_Source\PSoC5/Clock_8.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 476              		.loc 1 268 0 is_stmt 0 discriminator 4
 477 00a8 0A4B     		ldr	r3, .L45+12
 478 00aa 1A70     		strb	r2, [r3]
 479              	.L42:
 269:Generated_Source\PSoC5/Clock_8.c ****             }
 480              		.loc 1 269 0 is_stmt 1 discriminator 1
 481 00ac 094B     		ldr	r3, .L45+12
 482 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483 00b0 13F0010F 		tst	r3, #1
 484 00b4 FAD1     		bne	.L42
 485 00b6 70BD     		pop	{r4, r5, r6, pc}
 486              	.LVL18:
 487              	.L40:
 274:Generated_Source\PSoC5/Clock_8.c **** 				Clock_8_CLKEN |= enabled;
 488              		.loc 1 274 0
 489 00b8 044A     		ldr	r2, .L45+4
 490 00ba 1480     		strh	r4, [r2]	@ movhi
 275:Generated_Source\PSoC5/Clock_8.c ****             }
 491              		.loc 1 275 0
 492 00bc 02F20632 		addw	r2, r2, #774
 493 00c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 494 00c2 0B43     		orrs	r3, r3, r1
 495              	.LVL19:
 496 00c4 1370     		strb	r3, [r2]
 497              	.L32:
 498 00c6 70BD     		pop	{r4, r5, r6, pc}
 499              	.L46:
 500              		.align	2
 501              	.L45:
 502 00c8 A2430040 		.word	1073759138
 503 00cc 9C400040 		.word	1073758364
 504 00d0 9E400040 		.word	1073758366
 505 00d4 01400040 		.word	1073758209
 506 00d8 02400040 		.word	1073758210
 507              		.cfi_endproc
 508              	.LFE4:
 509              		.size	Clock_8_SetDividerRegister, .-Clock_8_SetDividerRegister
 510              		.section	.text.Clock_8_SetSourceRegister,"ax",%progbits
 511              		.align	2
 512              		.global	Clock_8_SetSourceRegister
 513              		.thumb
 514              		.thumb_func
 515              		.type	Clock_8_SetSourceRegister, %function
 516              	Clock_8_SetSourceRegister:
 517              	.LFB9:
 420:Generated_Source\PSoC5/Clock_8.c ****     uint16 currDiv = Clock_8_GetDividerRegister();
 518              		.loc 1 420 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL20:
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
 526              		.cfi_offset 4, -12
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 19


 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529 0002 0446     		mov	r4, r0
 421:Generated_Source\PSoC5/Clock_8.c ****     uint8 oldSrc = Clock_8_GetSourceRegister();
 530              		.loc 1 421 0
 531 0004 FFF7FEFF 		bl	Clock_8_GetDividerRegister
 532              	.LVL21:
 533 0008 0546     		mov	r5, r0
 534              	.LVL22:
 422:Generated_Source\PSoC5/Clock_8.c **** 
 535              		.loc 1 422 0
 536 000a FFF7FEFF 		bl	Clock_8_GetSourceRegister
 537              	.LVL23:
 424:Generated_Source\PSoC5/Clock_8.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 538              		.loc 1 424 0
 539 000e 0346     		mov	r3, r0
 540 0010 60B1     		cbz	r0, .L48
 424:Generated_Source\PSoC5/Clock_8.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 541              		.loc 1 424 0 is_stmt 0 discriminator 1
 542 0012 5CB9     		cbnz	r4, .L48
 425:Generated_Source\PSoC5/Clock_8.c ****     {
 543              		.loc 1 425 0 is_stmt 1
 544 0014 55B9     		cbnz	r5, .L48
 429:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC =
 545              		.loc 1 429 0
 546 0016 104A     		ldr	r2, .L52
 547 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 548 001a 43F04003 		orr	r3, r3, #64
 549 001e 1370     		strb	r3, [r2]
 431:Generated_Source\PSoC5/Clock_8.c ****     }
 550              		.loc 1 431 0
 551 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:Generated_Source\PSoC5/Clock_8.c ****             (Clock_8_MOD_SRC & (uint8)(~Clock_8_SRC_SEL_MSK)) | clkSource;
 552              		.loc 1 430 0
 553 0022 03F0F803 		and	r3, r3, #248
 554 0026 1C43     		orrs	r4, r4, r3
 555 0028 1470     		strb	r4, [r2]
 556 002a 38BD     		pop	{r3, r4, r5, pc}
 557              	.LVL24:
 558              	.L48:
 433:Generated_Source\PSoC5/Clock_8.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 559              		.loc 1 433 0
 560 002c 63B9     		cbnz	r3, .L50
 433:Generated_Source\PSoC5/Clock_8.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 561              		.loc 1 433 0 is_stmt 0 discriminator 1
 562 002e 5CB1     		cbz	r4, .L50
 434:Generated_Source\PSoC5/Clock_8.c ****     {
 563              		.loc 1 434 0 is_stmt 1
 564 0030 55B9     		cbnz	r5, .L50
 439:Generated_Source\PSoC5/Clock_8.c ****         Clock_8_MOD_SRC &= (uint8)(~CYCLK_SSS);
 565              		.loc 1 439 0
 566 0032 094A     		ldr	r2, .L52
 567 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:Generated_Source\PSoC5/Clock_8.c ****             (Clock_8_MOD_SRC & (uint8)(~Clock_8_SRC_SEL_MSK)) | clkSource;
 568              		.loc 1 438 0
 569 0036 03F0F803 		and	r3, r3, #248
 570 003a 1C43     		orrs	r4, r4, r3
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 20


 571 003c 1470     		strb	r4, [r2]
 440:Generated_Source\PSoC5/Clock_8.c ****     }
 572              		.loc 1 440 0
 573 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 574 0040 03F0BF03 		and	r3, r3, #191
 575 0044 1370     		strb	r3, [r2]
 576 0046 38BD     		pop	{r3, r4, r5, pc}
 577              	.LVL25:
 578              	.L50:
 445:Generated_Source\PSoC5/Clock_8.c ****     }
 579              		.loc 1 445 0
 580 0048 034A     		ldr	r2, .L52
 581 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:Generated_Source\PSoC5/Clock_8.c ****             (Clock_8_MOD_SRC & (uint8)(~Clock_8_SRC_SEL_MSK)) | clkSource;
 582              		.loc 1 444 0
 583 004c 03F0F803 		and	r3, r3, #248
 584 0050 1C43     		orrs	r4, r4, r3
 585 0052 1470     		strb	r4, [r2]
 586 0054 38BD     		pop	{r3, r4, r5, pc}
 587              	.LVL26:
 588              	.L53:
 589 0056 00BF     		.align	2
 590              	.L52:
 591 0058 9E400040 		.word	1073758366
 592              		.cfi_endproc
 593              	.LFE9:
 594              		.size	Clock_8_SetSourceRegister, .-Clock_8_SetSourceRegister
 595              		.text
 596              	.Letext0:
 597              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 598              		.section	.debug_info,"",%progbits
 599              	.Ldebug_info0:
 600 0000 7F020000 		.4byte	0x27f
 601 0004 0400     		.2byte	0x4
 602 0006 00000000 		.4byte	.Ldebug_abbrev0
 603 000a 04       		.byte	0x4
 604 000b 01       		.uleb128 0x1
 605 000c 5E020000 		.4byte	.LASF36
 606 0010 0C       		.byte	0xc
 607 0011 C4000000 		.4byte	.LASF37
 608 0015 5F010000 		.4byte	.LASF38
 609 0019 00000000 		.4byte	.Ldebug_ranges0+0
 610 001d 00000000 		.4byte	0
 611 0021 00000000 		.4byte	.Ldebug_line0
 612 0025 02       		.uleb128 0x2
 613 0026 01       		.byte	0x1
 614 0027 06       		.byte	0x6
 615 0028 FF000000 		.4byte	.LASF0
 616 002c 02       		.uleb128 0x2
 617 002d 01       		.byte	0x1
 618 002e 08       		.byte	0x8
 619 002f E5000000 		.4byte	.LASF1
 620 0033 02       		.uleb128 0x2
 621 0034 02       		.byte	0x2
 622 0035 05       		.byte	0x5
 623 0036 41000000 		.4byte	.LASF2
 624 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 21


 625 003b 02       		.byte	0x2
 626 003c 07       		.byte	0x7
 627 003d 47010000 		.4byte	.LASF3
 628 0041 02       		.uleb128 0x2
 629 0042 04       		.byte	0x4
 630 0043 05       		.byte	0x5
 631 0044 9B000000 		.4byte	.LASF4
 632 0048 02       		.uleb128 0x2
 633 0049 04       		.byte	0x4
 634 004a 07       		.byte	0x7
 635 004b 2F020000 		.4byte	.LASF5
 636 004f 02       		.uleb128 0x2
 637 0050 08       		.byte	0x8
 638 0051 05       		.byte	0x5
 639 0052 8D000000 		.4byte	.LASF6
 640 0056 02       		.uleb128 0x2
 641 0057 08       		.byte	0x8
 642 0058 07       		.byte	0x7
 643 0059 0B010000 		.4byte	.LASF7
 644 005d 03       		.uleb128 0x3
 645 005e 04       		.byte	0x4
 646 005f 05       		.byte	0x5
 647 0060 696E7400 		.ascii	"int\000"
 648 0064 02       		.uleb128 0x2
 649 0065 04       		.byte	0x4
 650 0066 07       		.byte	0x7
 651 0067 22010000 		.4byte	.LASF8
 652 006b 04       		.uleb128 0x4
 653 006c 61000000 		.4byte	.LASF9
 654 0070 02       		.byte	0x2
 655 0071 E401     		.2byte	0x1e4
 656 0073 2C000000 		.4byte	0x2c
 657 0077 04       		.uleb128 0x4
 658 0078 4B000000 		.4byte	.LASF10
 659 007c 02       		.byte	0x2
 660 007d E501     		.2byte	0x1e5
 661 007f 3A000000 		.4byte	0x3a
 662 0083 02       		.uleb128 0x2
 663 0084 04       		.byte	0x4
 664 0085 04       		.byte	0x4
 665 0086 87000000 		.4byte	.LASF11
 666 008a 02       		.uleb128 0x2
 667 008b 08       		.byte	0x8
 668 008c 04       		.byte	0x4
 669 008d 41020000 		.4byte	.LASF12
 670 0091 02       		.uleb128 0x2
 671 0092 01       		.byte	0x1
 672 0093 08       		.byte	0x8
 673 0094 5A010000 		.4byte	.LASF13
 674 0098 04       		.uleb128 0x4
 675 0099 2A020000 		.4byte	.LASF14
 676 009d 02       		.byte	0x2
 677 009e 8E02     		.2byte	0x28e
 678 00a0 A4000000 		.4byte	0xa4
 679 00a4 05       		.uleb128 0x5
 680 00a5 6B000000 		.4byte	0x6b
 681 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 22


 682 00aa 3B000000 		.4byte	.LASF15
 683 00ae 02       		.byte	0x2
 684 00af 8F02     		.2byte	0x28f
 685 00b1 B5000000 		.4byte	0xb5
 686 00b5 05       		.uleb128 0x5
 687 00b6 77000000 		.4byte	0x77
 688 00ba 06       		.uleb128 0x6
 689 00bb 48020000 		.4byte	.LASF16
 690 00bf 01       		.byte	0x1
 691 00c0 2D       		.byte	0x2d
 692 00c1 00000000 		.4byte	.LFB0
 693 00c5 1C000000 		.4byte	.LFE0-.LFB0
 694 00c9 01       		.uleb128 0x1
 695 00ca 9C       		.byte	0x9c
 696 00cb 06       		.uleb128 0x6
 697 00cc 03020000 		.4byte	.LASF17
 698 00d0 01       		.byte	0x1
 699 00d1 47       		.byte	0x47
 700 00d2 00000000 		.4byte	.LFB1
 701 00d6 1C000000 		.4byte	.LFE1-.LFB1
 702 00da 01       		.uleb128 0x1
 703 00db 9C       		.byte	0x9c
 704 00dc 07       		.uleb128 0x7
 705 00dd F1010000 		.4byte	.LASF18
 706 00e1 01       		.byte	0x1
 707 00e2 64       		.byte	0x64
 708 00e3 00000000 		.4byte	.LFB2
 709 00e7 6C000000 		.4byte	.LFE2-.LFB2
 710 00eb 01       		.uleb128 0x1
 711 00ec 9C       		.byte	0x9c
 712 00ed 0B010000 		.4byte	0x10b
 713 00f1 08       		.uleb128 0x8
 714 00f2 0A000000 		.4byte	.LBB2
 715 00f6 62000000 		.4byte	.LBE2-.LBB2
 716 00fa 09       		.uleb128 0x9
 717 00fb E6010000 		.4byte	.LASF30
 718 00ff 01       		.byte	0x1
 719 0100 69       		.byte	0x69
 720 0101 77000000 		.4byte	0x77
 721 0105 00000000 		.4byte	.LLST0
 722 0109 00       		.byte	0
 723 010a 00       		.byte	0
 724 010b 07       		.uleb128 0x7
 725 010c 72000000 		.4byte	.LASF19
 726 0110 01       		.byte	0x1
 727 0111 9D       		.byte	0x9d
 728 0112 00000000 		.4byte	.LFB3
 729 0116 20000000 		.4byte	.LFE3-.LFB3
 730 011a 01       		.uleb128 0x1
 731 011b 9C       		.byte	0x9c
 732 011c 2E010000 		.4byte	0x12e
 733 0120 0A       		.uleb128 0xa
 734 0121 BE000000 		.4byte	.LASF21
 735 0125 01       		.byte	0x1
 736 0126 9D       		.byte	0x9d
 737 0127 6B000000 		.4byte	0x6b
 738 012b 01       		.uleb128 0x1
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 23


 739 012c 50       		.byte	0x50
 740 012d 00       		.byte	0
 741 012e 0B       		.uleb128 0xb
 742 012f B9010000 		.4byte	.LASF24
 743 0133 01       		.byte	0x1
 744 0134 2901     		.2byte	0x129
 745 0136 77000000 		.4byte	0x77
 746 013a 00000000 		.4byte	.LFB5
 747 013e 0C000000 		.4byte	.LFE5-.LFB5
 748 0142 01       		.uleb128 0x1
 749 0143 9C       		.byte	0x9c
 750 0144 0C       		.uleb128 0xc
 751 0145 2F010000 		.4byte	.LASF20
 752 0149 01       		.byte	0x1
 753 014a 4C01     		.2byte	0x14c
 754 014c 00000000 		.4byte	.LFB6
 755 0150 14000000 		.4byte	.LFE6-.LFB6
 756 0154 01       		.uleb128 0x1
 757 0155 9C       		.byte	0x9c
 758 0156 6B010000 		.4byte	0x16b
 759 015a 0D       		.uleb128 0xd
 760 015b F3000000 		.4byte	.LASF22
 761 015f 01       		.byte	0x1
 762 0160 4C01     		.2byte	0x14c
 763 0162 6B000000 		.4byte	0x6b
 764 0166 13000000 		.4byte	.LLST1
 765 016a 00       		.byte	0
 766 016b 0C       		.uleb128 0xc
 767 016c EC020000 		.4byte	.LASF23
 768 0170 01       		.byte	0x1
 769 0171 6F01     		.2byte	0x16f
 770 0173 00000000 		.4byte	.LFB7
 771 0177 18000000 		.4byte	.LFE7-.LFB7
 772 017b 01       		.uleb128 0x1
 773 017c 9C       		.byte	0x9c
 774 017d 92010000 		.4byte	0x192
 775 0181 0D       		.uleb128 0xd
 776 0182 F3000000 		.4byte	.LASF22
 777 0186 01       		.byte	0x1
 778 0187 6F01     		.2byte	0x16f
 779 0189 6B000000 		.4byte	0x6b
 780 018d 34000000 		.4byte	.LLST2
 781 0191 00       		.byte	0
 782 0192 0B       		.uleb128 0xb
 783 0193 00000000 		.4byte	.LASF25
 784 0197 01       		.byte	0x1
 785 0198 8401     		.2byte	0x184
 786 019a 6B000000 		.4byte	0x6b
 787 019e 00000000 		.4byte	.LFB8
 788 01a2 10000000 		.4byte	.LFE8-.LFB8
 789 01a6 01       		.uleb128 0x1
 790 01a7 9C       		.byte	0x9c
 791 01a8 0B       		.uleb128 0xb
 792 01a9 10020000 		.4byte	.LASF26
 793 01ad 01       		.byte	0x1
 794 01ae D001     		.2byte	0x1d0
 795 01b0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 24


 796 01b4 00000000 		.4byte	.LFB10
 797 01b8 10000000 		.4byte	.LFE10-.LFB10
 798 01bc 01       		.uleb128 0x1
 799 01bd 9C       		.byte	0x9c
 800 01be 07       		.uleb128 0x7
 801 01bf 18000000 		.4byte	.LASF27
 802 01c3 01       		.byte	0x1
 803 01c4 C1       		.byte	0xc1
 804 01c5 00000000 		.4byte	.LFB4
 805 01c9 DC000000 		.4byte	.LFE4-.LFB4
 806 01cd 01       		.uleb128 0x1
 807 01ce 9C       		.byte	0x9c
 808 01cf 2F020000 		.4byte	0x22f
 809 01d3 0E       		.uleb128 0xe
 810 01d4 67000000 		.4byte	.LASF28
 811 01d8 01       		.byte	0x1
 812 01d9 C1       		.byte	0xc1
 813 01da 77000000 		.4byte	0x77
 814 01de 55000000 		.4byte	.LLST3
 815 01e2 0E       		.uleb128 0xe
 816 01e3 52000000 		.4byte	.LASF29
 817 01e7 01       		.byte	0x1
 818 01e8 C1       		.byte	0xc1
 819 01e9 6B000000 		.4byte	0x6b
 820 01ed 76000000 		.4byte	.LLST4
 821 01f1 09       		.uleb128 0x9
 822 01f2 56020000 		.4byte	.LASF31
 823 01f6 01       		.byte	0x1
 824 01f7 C4       		.byte	0xc4
 825 01f8 6B000000 		.4byte	0x6b
 826 01fc 97000000 		.4byte	.LLST5
 827 0200 09       		.uleb128 0x9
 828 0201 DE010000 		.4byte	.LASF32
 829 0205 01       		.byte	0x1
 830 0206 C6       		.byte	0xc6
 831 0207 6B000000 		.4byte	0x6b
 832 020b CB000000 		.4byte	.LLST6
 833 020f 0F       		.uleb128 0xf
 834 0210 E6010000 		.4byte	.LASF30
 835 0214 01       		.byte	0x1
 836 0215 C7       		.byte	0xc7
 837 0216 77000000 		.4byte	0x77
 838 021a 01       		.uleb128 0x1
 839 021b 50       		.byte	0x50
 840 021c 10       		.uleb128 0x10
 841 021d 0A000000 		.4byte	.LVL8
 842 0221 A8010000 		.4byte	0x1a8
 843 0225 10       		.uleb128 0x10
 844 0226 10000000 		.4byte	.LVL10
 845 022a 2E010000 		.4byte	0x12e
 846 022e 00       		.byte	0
 847 022f 11       		.uleb128 0x11
 848 0230 A4000000 		.4byte	.LASF39
 849 0234 01       		.byte	0x1
 850 0235 A301     		.2byte	0x1a3
 851 0237 00000000 		.4byte	.LFB9
 852 023b 5C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 25


 853 023f 01       		.uleb128 0x1
 854 0240 9C       		.byte	0x9c
 855 0241 0D       		.uleb128 0xd
 856 0242 D4010000 		.4byte	.LASF33
 857 0246 01       		.byte	0x1
 858 0247 A301     		.2byte	0x1a3
 859 0249 6B000000 		.4byte	0x6b
 860 024d DE000000 		.4byte	.LLST7
 861 0251 12       		.uleb128 0x12
 862 0252 33000000 		.4byte	.LASF34
 863 0256 01       		.byte	0x1
 864 0257 A501     		.2byte	0x1a5
 865 0259 77000000 		.4byte	0x77
 866 025d FF000000 		.4byte	.LLST8
 867 0261 13       		.uleb128 0x13
 868 0262 5A000000 		.4byte	.LASF35
 869 0266 01       		.byte	0x1
 870 0267 A601     		.2byte	0x1a6
 871 0269 6B000000 		.4byte	0x6b
 872 026d 01       		.uleb128 0x1
 873 026e 50       		.byte	0x50
 874 026f 10       		.uleb128 0x10
 875 0270 08000000 		.4byte	.LVL21
 876 0274 2E010000 		.4byte	0x12e
 877 0278 10       		.uleb128 0x10
 878 0279 0E000000 		.4byte	.LVL23
 879 027d A8010000 		.4byte	0x1a8
 880 0281 00       		.byte	0
 881 0282 00       		.byte	0
 882              		.section	.debug_abbrev,"",%progbits
 883              	.Ldebug_abbrev0:
 884 0000 01       		.uleb128 0x1
 885 0001 11       		.uleb128 0x11
 886 0002 01       		.byte	0x1
 887 0003 25       		.uleb128 0x25
 888 0004 0E       		.uleb128 0xe
 889 0005 13       		.uleb128 0x13
 890 0006 0B       		.uleb128 0xb
 891 0007 03       		.uleb128 0x3
 892 0008 0E       		.uleb128 0xe
 893 0009 1B       		.uleb128 0x1b
 894 000a 0E       		.uleb128 0xe
 895 000b 55       		.uleb128 0x55
 896 000c 17       		.uleb128 0x17
 897 000d 11       		.uleb128 0x11
 898 000e 01       		.uleb128 0x1
 899 000f 10       		.uleb128 0x10
 900 0010 17       		.uleb128 0x17
 901 0011 00       		.byte	0
 902 0012 00       		.byte	0
 903 0013 02       		.uleb128 0x2
 904 0014 24       		.uleb128 0x24
 905 0015 00       		.byte	0
 906 0016 0B       		.uleb128 0xb
 907 0017 0B       		.uleb128 0xb
 908 0018 3E       		.uleb128 0x3e
 909 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 26


 910 001a 03       		.uleb128 0x3
 911 001b 0E       		.uleb128 0xe
 912 001c 00       		.byte	0
 913 001d 00       		.byte	0
 914 001e 03       		.uleb128 0x3
 915 001f 24       		.uleb128 0x24
 916 0020 00       		.byte	0
 917 0021 0B       		.uleb128 0xb
 918 0022 0B       		.uleb128 0xb
 919 0023 3E       		.uleb128 0x3e
 920 0024 0B       		.uleb128 0xb
 921 0025 03       		.uleb128 0x3
 922 0026 08       		.uleb128 0x8
 923 0027 00       		.byte	0
 924 0028 00       		.byte	0
 925 0029 04       		.uleb128 0x4
 926 002a 16       		.uleb128 0x16
 927 002b 00       		.byte	0
 928 002c 03       		.uleb128 0x3
 929 002d 0E       		.uleb128 0xe
 930 002e 3A       		.uleb128 0x3a
 931 002f 0B       		.uleb128 0xb
 932 0030 3B       		.uleb128 0x3b
 933 0031 05       		.uleb128 0x5
 934 0032 49       		.uleb128 0x49
 935 0033 13       		.uleb128 0x13
 936 0034 00       		.byte	0
 937 0035 00       		.byte	0
 938 0036 05       		.uleb128 0x5
 939 0037 35       		.uleb128 0x35
 940 0038 00       		.byte	0
 941 0039 49       		.uleb128 0x49
 942 003a 13       		.uleb128 0x13
 943 003b 00       		.byte	0
 944 003c 00       		.byte	0
 945 003d 06       		.uleb128 0x6
 946 003e 2E       		.uleb128 0x2e
 947 003f 00       		.byte	0
 948 0040 3F       		.uleb128 0x3f
 949 0041 19       		.uleb128 0x19
 950 0042 03       		.uleb128 0x3
 951 0043 0E       		.uleb128 0xe
 952 0044 3A       		.uleb128 0x3a
 953 0045 0B       		.uleb128 0xb
 954 0046 3B       		.uleb128 0x3b
 955 0047 0B       		.uleb128 0xb
 956 0048 27       		.uleb128 0x27
 957 0049 19       		.uleb128 0x19
 958 004a 11       		.uleb128 0x11
 959 004b 01       		.uleb128 0x1
 960 004c 12       		.uleb128 0x12
 961 004d 06       		.uleb128 0x6
 962 004e 40       		.uleb128 0x40
 963 004f 18       		.uleb128 0x18
 964 0050 9742     		.uleb128 0x2117
 965 0052 19       		.uleb128 0x19
 966 0053 00       		.byte	0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 27


 967 0054 00       		.byte	0
 968 0055 07       		.uleb128 0x7
 969 0056 2E       		.uleb128 0x2e
 970 0057 01       		.byte	0x1
 971 0058 3F       		.uleb128 0x3f
 972 0059 19       		.uleb128 0x19
 973 005a 03       		.uleb128 0x3
 974 005b 0E       		.uleb128 0xe
 975 005c 3A       		.uleb128 0x3a
 976 005d 0B       		.uleb128 0xb
 977 005e 3B       		.uleb128 0x3b
 978 005f 0B       		.uleb128 0xb
 979 0060 27       		.uleb128 0x27
 980 0061 19       		.uleb128 0x19
 981 0062 11       		.uleb128 0x11
 982 0063 01       		.uleb128 0x1
 983 0064 12       		.uleb128 0x12
 984 0065 06       		.uleb128 0x6
 985 0066 40       		.uleb128 0x40
 986 0067 18       		.uleb128 0x18
 987 0068 9742     		.uleb128 0x2117
 988 006a 19       		.uleb128 0x19
 989 006b 01       		.uleb128 0x1
 990 006c 13       		.uleb128 0x13
 991 006d 00       		.byte	0
 992 006e 00       		.byte	0
 993 006f 08       		.uleb128 0x8
 994 0070 0B       		.uleb128 0xb
 995 0071 01       		.byte	0x1
 996 0072 11       		.uleb128 0x11
 997 0073 01       		.uleb128 0x1
 998 0074 12       		.uleb128 0x12
 999 0075 06       		.uleb128 0x6
 1000 0076 00       		.byte	0
 1001 0077 00       		.byte	0
 1002 0078 09       		.uleb128 0x9
 1003 0079 34       		.uleb128 0x34
 1004 007a 00       		.byte	0
 1005 007b 03       		.uleb128 0x3
 1006 007c 0E       		.uleb128 0xe
 1007 007d 3A       		.uleb128 0x3a
 1008 007e 0B       		.uleb128 0xb
 1009 007f 3B       		.uleb128 0x3b
 1010 0080 0B       		.uleb128 0xb
 1011 0081 49       		.uleb128 0x49
 1012 0082 13       		.uleb128 0x13
 1013 0083 02       		.uleb128 0x2
 1014 0084 17       		.uleb128 0x17
 1015 0085 00       		.byte	0
 1016 0086 00       		.byte	0
 1017 0087 0A       		.uleb128 0xa
 1018 0088 05       		.uleb128 0x5
 1019 0089 00       		.byte	0
 1020 008a 03       		.uleb128 0x3
 1021 008b 0E       		.uleb128 0xe
 1022 008c 3A       		.uleb128 0x3a
 1023 008d 0B       		.uleb128 0xb
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 28


 1024 008e 3B       		.uleb128 0x3b
 1025 008f 0B       		.uleb128 0xb
 1026 0090 49       		.uleb128 0x49
 1027 0091 13       		.uleb128 0x13
 1028 0092 02       		.uleb128 0x2
 1029 0093 18       		.uleb128 0x18
 1030 0094 00       		.byte	0
 1031 0095 00       		.byte	0
 1032 0096 0B       		.uleb128 0xb
 1033 0097 2E       		.uleb128 0x2e
 1034 0098 00       		.byte	0
 1035 0099 3F       		.uleb128 0x3f
 1036 009a 19       		.uleb128 0x19
 1037 009b 03       		.uleb128 0x3
 1038 009c 0E       		.uleb128 0xe
 1039 009d 3A       		.uleb128 0x3a
 1040 009e 0B       		.uleb128 0xb
 1041 009f 3B       		.uleb128 0x3b
 1042 00a0 05       		.uleb128 0x5
 1043 00a1 27       		.uleb128 0x27
 1044 00a2 19       		.uleb128 0x19
 1045 00a3 49       		.uleb128 0x49
 1046 00a4 13       		.uleb128 0x13
 1047 00a5 11       		.uleb128 0x11
 1048 00a6 01       		.uleb128 0x1
 1049 00a7 12       		.uleb128 0x12
 1050 00a8 06       		.uleb128 0x6
 1051 00a9 40       		.uleb128 0x40
 1052 00aa 18       		.uleb128 0x18
 1053 00ab 9742     		.uleb128 0x2117
 1054 00ad 19       		.uleb128 0x19
 1055 00ae 00       		.byte	0
 1056 00af 00       		.byte	0
 1057 00b0 0C       		.uleb128 0xc
 1058 00b1 2E       		.uleb128 0x2e
 1059 00b2 01       		.byte	0x1
 1060 00b3 3F       		.uleb128 0x3f
 1061 00b4 19       		.uleb128 0x19
 1062 00b5 03       		.uleb128 0x3
 1063 00b6 0E       		.uleb128 0xe
 1064 00b7 3A       		.uleb128 0x3a
 1065 00b8 0B       		.uleb128 0xb
 1066 00b9 3B       		.uleb128 0x3b
 1067 00ba 05       		.uleb128 0x5
 1068 00bb 27       		.uleb128 0x27
 1069 00bc 19       		.uleb128 0x19
 1070 00bd 11       		.uleb128 0x11
 1071 00be 01       		.uleb128 0x1
 1072 00bf 12       		.uleb128 0x12
 1073 00c0 06       		.uleb128 0x6
 1074 00c1 40       		.uleb128 0x40
 1075 00c2 18       		.uleb128 0x18
 1076 00c3 9742     		.uleb128 0x2117
 1077 00c5 19       		.uleb128 0x19
 1078 00c6 01       		.uleb128 0x1
 1079 00c7 13       		.uleb128 0x13
 1080 00c8 00       		.byte	0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 29


 1081 00c9 00       		.byte	0
 1082 00ca 0D       		.uleb128 0xd
 1083 00cb 05       		.uleb128 0x5
 1084 00cc 00       		.byte	0
 1085 00cd 03       		.uleb128 0x3
 1086 00ce 0E       		.uleb128 0xe
 1087 00cf 3A       		.uleb128 0x3a
 1088 00d0 0B       		.uleb128 0xb
 1089 00d1 3B       		.uleb128 0x3b
 1090 00d2 05       		.uleb128 0x5
 1091 00d3 49       		.uleb128 0x49
 1092 00d4 13       		.uleb128 0x13
 1093 00d5 02       		.uleb128 0x2
 1094 00d6 17       		.uleb128 0x17
 1095 00d7 00       		.byte	0
 1096 00d8 00       		.byte	0
 1097 00d9 0E       		.uleb128 0xe
 1098 00da 05       		.uleb128 0x5
 1099 00db 00       		.byte	0
 1100 00dc 03       		.uleb128 0x3
 1101 00dd 0E       		.uleb128 0xe
 1102 00de 3A       		.uleb128 0x3a
 1103 00df 0B       		.uleb128 0xb
 1104 00e0 3B       		.uleb128 0x3b
 1105 00e1 0B       		.uleb128 0xb
 1106 00e2 49       		.uleb128 0x49
 1107 00e3 13       		.uleb128 0x13
 1108 00e4 02       		.uleb128 0x2
 1109 00e5 17       		.uleb128 0x17
 1110 00e6 00       		.byte	0
 1111 00e7 00       		.byte	0
 1112 00e8 0F       		.uleb128 0xf
 1113 00e9 34       		.uleb128 0x34
 1114 00ea 00       		.byte	0
 1115 00eb 03       		.uleb128 0x3
 1116 00ec 0E       		.uleb128 0xe
 1117 00ed 3A       		.uleb128 0x3a
 1118 00ee 0B       		.uleb128 0xb
 1119 00ef 3B       		.uleb128 0x3b
 1120 00f0 0B       		.uleb128 0xb
 1121 00f1 49       		.uleb128 0x49
 1122 00f2 13       		.uleb128 0x13
 1123 00f3 02       		.uleb128 0x2
 1124 00f4 18       		.uleb128 0x18
 1125 00f5 00       		.byte	0
 1126 00f6 00       		.byte	0
 1127 00f7 10       		.uleb128 0x10
 1128 00f8 898201   		.uleb128 0x4109
 1129 00fb 00       		.byte	0
 1130 00fc 11       		.uleb128 0x11
 1131 00fd 01       		.uleb128 0x1
 1132 00fe 31       		.uleb128 0x31
 1133 00ff 13       		.uleb128 0x13
 1134 0100 00       		.byte	0
 1135 0101 00       		.byte	0
 1136 0102 11       		.uleb128 0x11
 1137 0103 2E       		.uleb128 0x2e
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 30


 1138 0104 01       		.byte	0x1
 1139 0105 3F       		.uleb128 0x3f
 1140 0106 19       		.uleb128 0x19
 1141 0107 03       		.uleb128 0x3
 1142 0108 0E       		.uleb128 0xe
 1143 0109 3A       		.uleb128 0x3a
 1144 010a 0B       		.uleb128 0xb
 1145 010b 3B       		.uleb128 0x3b
 1146 010c 05       		.uleb128 0x5
 1147 010d 27       		.uleb128 0x27
 1148 010e 19       		.uleb128 0x19
 1149 010f 11       		.uleb128 0x11
 1150 0110 01       		.uleb128 0x1
 1151 0111 12       		.uleb128 0x12
 1152 0112 06       		.uleb128 0x6
 1153 0113 40       		.uleb128 0x40
 1154 0114 18       		.uleb128 0x18
 1155 0115 9742     		.uleb128 0x2117
 1156 0117 19       		.uleb128 0x19
 1157 0118 00       		.byte	0
 1158 0119 00       		.byte	0
 1159 011a 12       		.uleb128 0x12
 1160 011b 34       		.uleb128 0x34
 1161 011c 00       		.byte	0
 1162 011d 03       		.uleb128 0x3
 1163 011e 0E       		.uleb128 0xe
 1164 011f 3A       		.uleb128 0x3a
 1165 0120 0B       		.uleb128 0xb
 1166 0121 3B       		.uleb128 0x3b
 1167 0122 05       		.uleb128 0x5
 1168 0123 49       		.uleb128 0x49
 1169 0124 13       		.uleb128 0x13
 1170 0125 02       		.uleb128 0x2
 1171 0126 17       		.uleb128 0x17
 1172 0127 00       		.byte	0
 1173 0128 00       		.byte	0
 1174 0129 13       		.uleb128 0x13
 1175 012a 34       		.uleb128 0x34
 1176 012b 00       		.byte	0
 1177 012c 03       		.uleb128 0x3
 1178 012d 0E       		.uleb128 0xe
 1179 012e 3A       		.uleb128 0x3a
 1180 012f 0B       		.uleb128 0xb
 1181 0130 3B       		.uleb128 0x3b
 1182 0131 05       		.uleb128 0x5
 1183 0132 49       		.uleb128 0x49
 1184 0133 13       		.uleb128 0x13
 1185 0134 02       		.uleb128 0x2
 1186 0135 18       		.uleb128 0x18
 1187 0136 00       		.byte	0
 1188 0137 00       		.byte	0
 1189 0138 00       		.byte	0
 1190              		.section	.debug_loc,"",%progbits
 1191              	.Ldebug_loc0:
 1192              	.LLST0:
 1193 0000 2A000000 		.4byte	.LVL0
 1194 0004 5A000000 		.4byte	.LVL1
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 31


 1195 0008 0100     		.2byte	0x1
 1196 000a 52       		.byte	0x52
 1197 000b 00000000 		.4byte	0
 1198 000f 00000000 		.4byte	0
 1199              	.LLST1:
 1200 0013 00000000 		.4byte	.LVL3
 1201 0017 08000000 		.4byte	.LVL4
 1202 001b 0100     		.2byte	0x1
 1203 001d 50       		.byte	0x50
 1204 001e 08000000 		.4byte	.LVL4
 1205 0022 14000000 		.4byte	.LFE6
 1206 0026 0400     		.2byte	0x4
 1207 0028 F3       		.byte	0xf3
 1208 0029 01       		.uleb128 0x1
 1209 002a 50       		.byte	0x50
 1210 002b 9F       		.byte	0x9f
 1211 002c 00000000 		.4byte	0
 1212 0030 00000000 		.4byte	0
 1213              	.LLST2:
 1214 0034 00000000 		.4byte	.LVL5
 1215 0038 06000000 		.4byte	.LVL6
 1216 003c 0100     		.2byte	0x1
 1217 003e 50       		.byte	0x50
 1218 003f 06000000 		.4byte	.LVL6
 1219 0043 18000000 		.4byte	.LFE7
 1220 0047 0400     		.2byte	0x4
 1221 0049 F3       		.byte	0xf3
 1222 004a 01       		.uleb128 0x1
 1223 004b 50       		.byte	0x50
 1224 004c 9F       		.byte	0x9f
 1225 004d 00000000 		.4byte	0
 1226 0051 00000000 		.4byte	0
 1227              	.LLST3:
 1228 0055 00000000 		.4byte	.LVL7
 1229 0059 09000000 		.4byte	.LVL8-1
 1230 005d 0100     		.2byte	0x1
 1231 005f 50       		.byte	0x50
 1232 0060 09000000 		.4byte	.LVL8-1
 1233 0064 DC000000 		.4byte	.LFE4
 1234 0068 0400     		.2byte	0x4
 1235 006a F3       		.byte	0xf3
 1236 006b 01       		.uleb128 0x1
 1237 006c 50       		.byte	0x50
 1238 006d 9F       		.byte	0x9f
 1239 006e 00000000 		.4byte	0
 1240 0072 00000000 		.4byte	0
 1241              	.LLST4:
 1242 0076 00000000 		.4byte	.LVL7
 1243 007a 09000000 		.4byte	.LVL8-1
 1244 007e 0100     		.2byte	0x1
 1245 0080 51       		.byte	0x51
 1246 0081 09000000 		.4byte	.LVL8-1
 1247 0085 DC000000 		.4byte	.LFE4
 1248 0089 0400     		.2byte	0x4
 1249 008b F3       		.byte	0xf3
 1250 008c 01       		.uleb128 0x1
 1251 008d 51       		.byte	0x51
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 32


 1252 008e 9F       		.byte	0x9f
 1253 008f 00000000 		.4byte	0
 1254 0093 00000000 		.4byte	0
 1255              	.LLST5:
 1256 0097 1E000000 		.4byte	.LVL11
 1257 009b 28000000 		.4byte	.LVL12
 1258 009f 0100     		.2byte	0x1
 1259 00a1 53       		.byte	0x53
 1260 00a2 36000000 		.4byte	.LVL13
 1261 00a6 3A000000 		.4byte	.LVL14
 1262 00aa 0100     		.2byte	0x1
 1263 00ac 53       		.byte	0x53
 1264 00ad 46000000 		.4byte	.LVL15
 1265 00b1 9E000000 		.4byte	.LVL17
 1266 00b5 0100     		.2byte	0x1
 1267 00b7 53       		.byte	0x53
 1268 00b8 B8000000 		.4byte	.LVL18
 1269 00bc C4000000 		.4byte	.LVL19
 1270 00c0 0100     		.2byte	0x1
 1271 00c2 53       		.byte	0x53
 1272 00c3 00000000 		.4byte	0
 1273 00c7 00000000 		.4byte	0
 1274              	.LLST6:
 1275 00cb 0C000000 		.4byte	.LVL9
 1276 00cf 50000000 		.4byte	.LVL16
 1277 00d3 0100     		.2byte	0x1
 1278 00d5 56       		.byte	0x56
 1279 00d6 00000000 		.4byte	0
 1280 00da 00000000 		.4byte	0
 1281              	.LLST7:
 1282 00de 00000000 		.4byte	.LVL20
 1283 00e2 07000000 		.4byte	.LVL21-1
 1284 00e6 0100     		.2byte	0x1
 1285 00e8 50       		.byte	0x50
 1286 00e9 07000000 		.4byte	.LVL21-1
 1287 00ed 5C000000 		.4byte	.LFE9
 1288 00f1 0400     		.2byte	0x4
 1289 00f3 F3       		.byte	0xf3
 1290 00f4 01       		.uleb128 0x1
 1291 00f5 50       		.byte	0x50
 1292 00f6 9F       		.byte	0x9f
 1293 00f7 00000000 		.4byte	0
 1294 00fb 00000000 		.4byte	0
 1295              	.LLST8:
 1296 00ff 0A000000 		.4byte	.LVL22
 1297 0103 56000000 		.4byte	.LVL26
 1298 0107 0100     		.2byte	0x1
 1299 0109 55       		.byte	0x55
 1300 010a 00000000 		.4byte	0
 1301 010e 00000000 		.4byte	0
 1302              		.section	.debug_aranges,"",%progbits
 1303 0000 6C000000 		.4byte	0x6c
 1304 0004 0200     		.2byte	0x2
 1305 0006 00000000 		.4byte	.Ldebug_info0
 1306 000a 04       		.byte	0x4
 1307 000b 00       		.byte	0
 1308 000c 0000     		.2byte	0
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 33


 1309 000e 0000     		.2byte	0
 1310 0010 00000000 		.4byte	.LFB0
 1311 0014 1C000000 		.4byte	.LFE0-.LFB0
 1312 0018 00000000 		.4byte	.LFB1
 1313 001c 1C000000 		.4byte	.LFE1-.LFB1
 1314 0020 00000000 		.4byte	.LFB2
 1315 0024 6C000000 		.4byte	.LFE2-.LFB2
 1316 0028 00000000 		.4byte	.LFB3
 1317 002c 20000000 		.4byte	.LFE3-.LFB3
 1318 0030 00000000 		.4byte	.LFB5
 1319 0034 0C000000 		.4byte	.LFE5-.LFB5
 1320 0038 00000000 		.4byte	.LFB6
 1321 003c 14000000 		.4byte	.LFE6-.LFB6
 1322 0040 00000000 		.4byte	.LFB7
 1323 0044 18000000 		.4byte	.LFE7-.LFB7
 1324 0048 00000000 		.4byte	.LFB8
 1325 004c 10000000 		.4byte	.LFE8-.LFB8
 1326 0050 00000000 		.4byte	.LFB10
 1327 0054 10000000 		.4byte	.LFE10-.LFB10
 1328 0058 00000000 		.4byte	.LFB4
 1329 005c DC000000 		.4byte	.LFE4-.LFB4
 1330 0060 00000000 		.4byte	.LFB9
 1331 0064 5C000000 		.4byte	.LFE9-.LFB9
 1332 0068 00000000 		.4byte	0
 1333 006c 00000000 		.4byte	0
 1334              		.section	.debug_ranges,"",%progbits
 1335              	.Ldebug_ranges0:
 1336 0000 00000000 		.4byte	.LFB0
 1337 0004 1C000000 		.4byte	.LFE0
 1338 0008 00000000 		.4byte	.LFB1
 1339 000c 1C000000 		.4byte	.LFE1
 1340 0010 00000000 		.4byte	.LFB2
 1341 0014 6C000000 		.4byte	.LFE2
 1342 0018 00000000 		.4byte	.LFB3
 1343 001c 20000000 		.4byte	.LFE3
 1344 0020 00000000 		.4byte	.LFB5
 1345 0024 0C000000 		.4byte	.LFE5
 1346 0028 00000000 		.4byte	.LFB6
 1347 002c 14000000 		.4byte	.LFE6
 1348 0030 00000000 		.4byte	.LFB7
 1349 0034 18000000 		.4byte	.LFE7
 1350 0038 00000000 		.4byte	.LFB8
 1351 003c 10000000 		.4byte	.LFE8
 1352 0040 00000000 		.4byte	.LFB10
 1353 0044 10000000 		.4byte	.LFE10
 1354 0048 00000000 		.4byte	.LFB4
 1355 004c DC000000 		.4byte	.LFE4
 1356 0050 00000000 		.4byte	.LFB9
 1357 0054 5C000000 		.4byte	.LFE9
 1358 0058 00000000 		.4byte	0
 1359 005c 00000000 		.4byte	0
 1360              		.section	.debug_line,"",%progbits
 1361              	.Ldebug_line0:
 1362 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1362      02004400 
 1362      00000201 
 1362      FB0E0D00 
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 34


 1362      01010101 
 1363              	.LASF25:
 1364 0000 436C6F63 		.ascii	"Clock_8_GetModeRegister\000"
 1364      6B5F385F 
 1364      4765744D 
 1364      6F646552 
 1364      65676973 
 1365              	.LASF27:
 1366 0018 436C6F63 		.ascii	"Clock_8_SetDividerRegister\000"
 1366      6B5F385F 
 1366      53657444 
 1366      69766964 
 1366      65725265 
 1367              	.LASF34:
 1368 0033 63757272 		.ascii	"currDiv\000"
 1368      44697600 
 1369              	.LASF15:
 1370 003b 72656731 		.ascii	"reg16\000"
 1370      3600
 1371              	.LASF2:
 1372 0041 73686F72 		.ascii	"short int\000"
 1372      7420696E 
 1372      7400
 1373              	.LASF10:
 1374 004b 75696E74 		.ascii	"uint16\000"
 1374      313600
 1375              	.LASF29:
 1376 0052 72657374 		.ascii	"restart\000"
 1376      61727400 
 1377              	.LASF35:
 1378 005a 6F6C6453 		.ascii	"oldSrc\000"
 1378      726300
 1379              	.LASF9:
 1380 0061 75696E74 		.ascii	"uint8\000"
 1380      3800
 1381              	.LASF28:
 1382 0067 636C6B44 		.ascii	"clkDivider\000"
 1382      69766964 
 1382      657200
 1383              	.LASF19:
 1384 0072 436C6F63 		.ascii	"Clock_8_StandbyPower\000"
 1384      6B5F385F 
 1384      5374616E 
 1384      64627950 
 1384      6F776572 
 1385              	.LASF11:
 1386 0087 666C6F61 		.ascii	"float\000"
 1386      7400
 1387              	.LASF6:
 1388 008d 6C6F6E67 		.ascii	"long long int\000"
 1388      206C6F6E 
 1388      6720696E 
 1388      7400
 1389              	.LASF4:
 1390 009b 6C6F6E67 		.ascii	"long int\000"
 1390      20696E74 
 1390      00
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 35


 1391              	.LASF39:
 1392 00a4 436C6F63 		.ascii	"Clock_8_SetSourceRegister\000"
 1392      6B5F385F 
 1392      53657453 
 1392      6F757263 
 1392      65526567 
 1393              	.LASF21:
 1394 00be 73746174 		.ascii	"state\000"
 1394      6500
 1395              	.LASF37:
 1396 00c4 47656E65 		.ascii	"Generated_Source\\PSoC5\\Clock_8.c\000"
 1396      72617465 
 1396      645F536F 
 1396      75726365 
 1396      5C50536F 
 1397              	.LASF1:
 1398 00e5 756E7369 		.ascii	"unsigned char\000"
 1398      676E6564 
 1398      20636861 
 1398      7200
 1399              	.LASF22:
 1400 00f3 6D6F6465 		.ascii	"modeBitMask\000"
 1400      4269744D 
 1400      61736B00 
 1401              	.LASF0:
 1402 00ff 7369676E 		.ascii	"signed char\000"
 1402      65642063 
 1402      68617200 
 1403              	.LASF7:
 1404 010b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1404      206C6F6E 
 1404      6720756E 
 1404      7369676E 
 1404      65642069 
 1405              	.LASF8:
 1406 0122 756E7369 		.ascii	"unsigned int\000"
 1406      676E6564 
 1406      20696E74 
 1406      00
 1407              	.LASF20:
 1408 012f 436C6F63 		.ascii	"Clock_8_SetModeRegister\000"
 1408      6B5F385F 
 1408      5365744D 
 1408      6F646552 
 1408      65676973 
 1409              	.LASF3:
 1410 0147 73686F72 		.ascii	"short unsigned int\000"
 1410      7420756E 
 1410      7369676E 
 1410      65642069 
 1410      6E7400
 1411              	.LASF13:
 1412 015a 63686172 		.ascii	"char\000"
 1412      00
 1413              	.LASF38:
 1414 015f 433A5C55 		.ascii	"C:\\Users\\Sandeep Nadella\\OneDrive\\Documents\\PS"
 1414      73657273 
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 36


 1414      5C53616E 
 1414      64656570 
 1414      204E6164 
 1415 018d 6F432043 		.ascii	"oC Creator\\SD_Workspace\\Robot_Control.cydsn\000"
 1415      72656174 
 1415      6F725C53 
 1415      445F576F 
 1415      726B7370 
 1416              	.LASF24:
 1417 01b9 436C6F63 		.ascii	"Clock_8_GetDividerRegister\000"
 1417      6B5F385F 
 1417      47657444 
 1417      69766964 
 1417      65725265 
 1418              	.LASF33:
 1419 01d4 636C6B53 		.ascii	"clkSource\000"
 1419      6F757263 
 1419      6500
 1420              	.LASF32:
 1421 01de 63757272 		.ascii	"currSrc\000"
 1421      53726300 
 1422              	.LASF30:
 1423 01e6 6F6C6444 		.ascii	"oldDivider\000"
 1423      69766964 
 1423      657200
 1424              	.LASF18:
 1425 01f1 436C6F63 		.ascii	"Clock_8_StopBlock\000"
 1425      6B5F385F 
 1425      53746F70 
 1425      426C6F63 
 1425      6B00
 1426              	.LASF17:
 1427 0203 436C6F63 		.ascii	"Clock_8_Stop\000"
 1427      6B5F385F 
 1427      53746F70 
 1427      00
 1428              	.LASF26:
 1429 0210 436C6F63 		.ascii	"Clock_8_GetSourceRegister\000"
 1429      6B5F385F 
 1429      47657453 
 1429      6F757263 
 1429      65526567 
 1430              	.LASF14:
 1431 022a 72656738 		.ascii	"reg8\000"
 1431      00
 1432              	.LASF5:
 1433 022f 6C6F6E67 		.ascii	"long unsigned int\000"
 1433      20756E73 
 1433      69676E65 
 1433      6420696E 
 1433      7400
 1434              	.LASF12:
 1435 0241 646F7562 		.ascii	"double\000"
 1435      6C6500
 1436              	.LASF16:
 1437 0248 436C6F63 		.ascii	"Clock_8_Start\000"
 1437      6B5F385F 
ARM GAS  C:\Users\SANDEE~1\AppData\Local\Temp\cclttknA.s 			page 37


 1437      53746172 
 1437      7400
 1438              	.LASF31:
 1439 0256 656E6162 		.ascii	"enabled\000"
 1439      6C656400 
 1440              	.LASF36:
 1441 025e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1441      43313120 
 1441      352E342E 
 1441      31203230 
 1441      31363036 
 1442 0291 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1442      20726576 
 1442      6973696F 
 1442      6E203233 
 1442      37373135 
 1443 02c4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1443      66756E63 
 1443      74696F6E 
 1443      2D736563 
 1443      74696F6E 
 1444              	.LASF23:
 1445 02ec 436C6F63 		.ascii	"Clock_8_ClearModeRegister\000"
 1445      6B5F385F 
 1445      436C6561 
 1445      724D6F64 
 1445      65526567 
 1446              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
